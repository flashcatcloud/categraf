[global]
# whether print configs
print_configs = false

# add label(agent_hostname) to series
# "" -> auto detect hostname
# "xx" -> use specified string xx
# "$hostname" -> auto detect hostname
# "$ip" -> auto detect ip
# "$hostname-$ip" -> auto detect hostname and ip to replace the vars
hostname = ""

# will not add label(agent_hostname) if true
omit_hostname = false

# s | ms
precision = "ms"

# global collect interval
interval = 15

# input provider settings; optional: LocalProvider / HttpRemoteProvider
providers = ["LocalProvider"]

# [global.labels]
# region = "shanghai"
# env = "localhost"

[writer_opt]
# default: 2000
batch = 2000
# channel(as queue) size
chan_size = 10000

[[writers]]
url = "http://127.0.0.1:19000/prometheus/v1/write"

# Basic auth username
basic_auth_user = ""

# Basic auth password
basic_auth_pass = ""

## Optional headers
# headers = ["X-From", "categraf", "X-Xyz", "abc"]

# timeout settings, unit: ms
timeout = 5000
dial_timeout = 2500
max_idle_conns_per_host = 100

[http]
enable = false
address = ":9100"
print_access = false
run_mode = "release"

[http_remote_provider]
# HttpRemoteProvider插件，通过Http请求的方式获取Categraf的配置
# 通过设置global中的provider为HttpRemoteProvider启用
# example request: GET /categraf/configs?agent=categraf&host=machine1 HTTP/1.1
# struct of response
# type httpRemoteProviderResponse struct {
#	// version is signature/md5 of current Config, server side should deal with the Version calculate
#	Version string `json:"version"`
#
#	// ConfigMap (InputName -> Config), if version is identical, server side can set Config to nil
#	Configs map[string]cfg.ConfigWithFormat `json:"configs"`
# }
# type ConfigWithFormat struct {
# 	Config string       `json:"config"`
# 	Format ConfigFormat `json:"format"`
# }
# example response:
# {
#  "version": "111",
#  "configs": {
#    "mysql": {
#      "config": "# # collect interval\n# interval = 15\n\n[[ instances ]]\naddress = \"172.33.44.55:3306\"\nusername = \"111\"\npassword = \"2222\"\nlabels = { instance = \"mysql2\"}\nextra_innodb_metrics =true",
#      "format": "toml"
#    }
#  }
#}
#
# remote url
remote_url = "http://localhost:20000/categraf/configs"

# header settings when request config from remote
headers = {agent = "categraf"}

# http basic auth config
basic_auth_user = ""
basic_auth_pass = ""

# tls InsecureSkipVerify
tls_insecure_skip_verify = false

# http timeout in seconds
timeout = 5

# reload interval in seconds
reload_interval = 120